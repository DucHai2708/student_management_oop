import React, { useState, useEffect, useCallback } from 'react';
import { semesterAPI } from '../services/api';
import SubjectManagement from './SubjectManagement';
import GradeManagement from './GradeManagement';
import AnalyticsDashboard from './AnalyticsDashboard';
import DocumentManagement from './DocumentManagement'; // <--- TH√äM IMPORT DOCUMENT MANAGEMENT

const Dashboard = ({ currentUser }) => {
  const [semesters, setSemesters] = useState([]);
  const [showForm, setShowForm] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    startDate: '',
    endDate: ''
  });
  // KHAI B√ÅO MODULE M·ªöI: 'documents'
  const [currentModule, setCurrentModule] = useState('semesters'); 

  // S·ª≠a: D√πng useCallback
  const loadSemesters = useCallback(async () => {
    try {
      const response = await semesterAPI.getSemesters(currentUser.userId);
      setSemesters(response.data);
    } catch (error) {
      console.error('Error loading semesters:', error);
    }
  }, [currentUser.userId]);

  // Load danh s√°ch h·ªçc k·ª≥ khi component mount
  useEffect(() => {
    if (currentUser && currentUser.userId) {
      loadSemesters();
    }
  }, [currentUser, loadSemesters]);

  const handleCreateSemester = async (e) => {
    e.preventDefault();
    
    console.log('Current user:', currentUser);
    
    if (!currentUser?.userId) {
      alert('L·ªói: Kh√¥ng t√¨m th·∫•y userId. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
      return;
    }
    
    try {
      const semesterData = {
        name: formData.name,
        startDate: formData.startDate,
        endDate: formData.endDate,
        userId: currentUser.userId
      };
      
      console.log('Sending semester data:', semesterData);
      
      const response = await semesterAPI.createSemester(semesterData);
      console.log('Create semester response:', response.data);
      
      setShowForm(false);
      setFormData({ name: '', startDate: '', endDate: '' });
      loadSemesters();
      alert('T·∫°o h·ªçc k·ª≥ th√†nh c√¥ng!');
    } catch (error) {
      console.error('Full error:', error);
      console.error('Error response:', error.response?.data);
      alert('L·ªói khi t·∫°o h·ªçc k·ª≥: ' + 
        (error.response?.data?.message || error.message || 'Unknown error'));
    }
  };

  const handleDeleteSemester = async (id) => {
    if (window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a h·ªçc k·ª≥ n√†y?')) {
      try {
        await semesterAPI.deleteSemester(id, currentUser.userId);
        loadSemesters();
        alert('X√≥a h·ªçc k·ª≥ th√†nh c√¥ng!');
      } catch (error) {
        alert('L·ªói khi x√≥a h·ªçc k·ª≥: ' + error.response?.data?.message);
      }
    }
  };

  // Render module qu·∫£n l√Ω h·ªçc k·ª≥
  const renderSemesterManagement = () => (
    <div>
      <h2>Qu·∫£n L√Ω H·ªçc K·ª≥</h2>
      <p>Xin ch√†o, {currentUser?.fullName} ({currentUser?.studentId})</p>
      
      <button 
        onClick={() => setShowForm(!showForm)}
        style={{ marginBottom: '20px', padding: '10px 15px', backgroundColor: '#007bff', color: 'white' }}
      >
        {showForm ? 'H·ªßy' : '+ Th√™m H·ªçc K·ª≥ M·ªõi'}
      </button>

      {/* Form th√™m h·ªçc k·ª≥ */}
      {showForm && (
        <form onSubmit={handleCreateSemester} style={{ 
          border: '1px solid #ddd', 
          padding: '20px', 
          marginBottom: '20px',
          borderRadius: '5px' 
        }}>
          <h3>Th√™m H·ªçc K·ª≥ M·ªõi</h3>
          <div style={{ marginBottom: '10px' }}>
            <input
              type="text"
              placeholder="T√™n h·ªçc k·ª≥ (VD: H·ªçc k·ª≥ 1 - 2024)"
              value={formData.name}
              onChange={(e) => setFormData({...formData, name: e.target.value})}
              style={{ width: '100%', padding: '8px' }}
              required
            />
          </div>
          <div style={{ marginBottom: '10px' }}>
            <label>Ng√†y b·∫Øt ƒë·∫ßu: </label>
            <input
              type="date"
              value={formData.startDate}
              onChange={(e) => setFormData({...formData, startDate: e.target.value})}
              style={{ padding: '8px', marginLeft: '10px' }}
            />
          </div>
          <div style={{ marginBottom: '10px' }}>
            <label>Ng√†y k·∫øt th√∫c: </label>
            <input
              type="date"
              value={formData.endDate}
              onChange={(e) => setFormData({...formData, endDate: e.target.value})}
              style={{ padding: '8px', marginLeft: '10px' }}
            />
          </div>
          <button type="submit" style={{ padding: '8px 15px', backgroundColor: '#28a745', color: 'white' }}>
            T·∫°o H·ªçc K·ª≥
          </button>
        </form>
      )}

      {/* Danh s√°ch h·ªçc k·ª≥ - S·ª¨A: B·ªé C√ÅC N√öT TH·ª™A, CH·ªà GI·ªÆ X√ìA */}
      <div>
        <h3>Danh s√°ch h·ªçc k·ª≥ c·ªßa b·∫°n:</h3>
        {semesters.length === 0 ? (
          <p>Ch∆∞a c√≥ h·ªçc k·ª≥ n√†o. H√£y t·∫°o h·ªçc k·ª≥ ƒë·∫ßu ti√™n!</p>
        ) : (
          <div>
            {semesters.map(semester => (
              <div key={semester.id} style={{
                border: '1px solid #ddd',
                padding: '15px',
                marginBottom: '10px',
                borderRadius: '5px',
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center'
              }}>
                <div>
                  <h4>{semester.name}</h4>
                  <p>B·∫Øt ƒë·∫ßu: {semester.startDate} | K·∫øt th√∫c: {semester.endDate}</p>
                </div>
                <div>
                  {/* CH·ªà GI·ªÆ L·∫†I N√öT X√ìA, B·ªé C√ÅC N√öT KH√ÅC */}
                  <button 
                    onClick={() => handleDeleteSemester(semester.id)}
                    style={{ padding: '5px 10px', backgroundColor: '#dc3545', color: 'white' }}
                  >
                    X√≥a
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );

  // Render module qu·∫£n l√Ω m√¥n h·ªçc
  const renderSubjectManagement = () => (
    <div>
      <button 
        onClick={() => setCurrentModule('semesters')}
        style={{ marginBottom: '20px', padding: '8px 15px', backgroundColor: '#6c757d', color: 'white' }}
      >
        ‚Üê Quay l·∫°i Qu·∫£n l√Ω H·ªçc k·ª≥
      </button>
      <SubjectManagement currentUser={currentUser} />
    </div>
  );

  // Render module qu·∫£n l√Ω ƒëi·ªÉm s·ªë
  const renderGradeManagement = () => (
    <div>
      <button 
        onClick={() => setCurrentModule('semesters')}
        style={{ marginBottom: '20px', padding: '8px 15px', backgroundColor: '#6c757d', color: 'white' }}
      >
        ‚Üê Quay l·∫°i Qu·∫£n l√Ω H·ªçc k·ª≥
      </button>
      <GradeManagement currentUser={currentUser} />
    </div>
  );
  
  // RENDER MODULE QU·∫¢N L√ù T√ÄI LI·ªÜU (T·∫†O M·ªöI)
  const renderDocumentManagement = () => (
    <div>
      <DocumentManagement currentUser={currentUser} />
    </div>
  );

  // Render module analytics
  const renderAnalyticsDashboard = () => (
    <div>
      <button 
        onClick={() => setCurrentModule('semesters')}
        style={{ marginBottom: '20px', padding: '8px 15px', backgroundColor: '#6c757d', color: 'white' }}
      >
        ‚Üê Quay l·∫°i Qu·∫£n l√Ω H·ªçc k·ª≥
      </button>
      <AnalyticsDashboard currentUser={currentUser} />
    </div>
  );

  return (
    <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>
      {/* Navigation - C√ÅC N√öT CHUY·ªÇN MODULE CH√çNH */}
      <div style={{ marginBottom: '20px', borderBottom: '1px solid #ddd', paddingBottom: '10px' }}>
        <button 
          onClick={() => setCurrentModule('semesters')}
          style={{ 
            padding: '10px 20px', 
            backgroundColor: currentModule === 'semesters' ? '#007bff' : '#f8f9fa', 
            color: currentModule === 'semesters' ? 'white' : 'black',
            marginRight: '10px'
          }}
        >
          Qu·∫£n l√Ω H·ªçc k·ª≥
        </button>
        <button 
          onClick={() => setCurrentModule('subjects')}
          style={{ 
            padding: '10px 20px', 
            backgroundColor: currentModule === 'subjects' ? '#007bff' : '#f8f9fa', 
            color: currentModule === 'subjects' ? 'white' : 'black',
            marginRight: '10px'
          }}
        >
          Qu·∫£n l√Ω M√¥n h·ªçc
        </button>
        <button 
          onClick={() => setCurrentModule('grades')}
          style={{ 
            padding: '10px 20px', 
            backgroundColor: currentModule === 'grades' ? '#007bff' : '#f8f9fa', 
            color: currentModule === 'grades' ? 'white' : 'black',
            marginRight: '10px'
          }}
        >
          Qu·∫£n l√Ω ƒêi·ªÉm s·ªë
        </button>
        
        {/* TH√äM N√öT QU·∫¢N L√ù T√ÄI LI·ªÜU */}
        <button 
          onClick={() => setCurrentModule('documents')} 
          style={{ 
            padding: '10px 20px', 
            backgroundColor: currentModule === 'documents' ? '#007bff' : '#f8f9fa', 
            color: currentModule === 'documents' ? 'white' : 'black',
            marginRight: '10px'
          }}
        >
          üìé Qu·∫£n l√Ω T√†i li·ªáu
        </button>

        <button 
          onClick={() => setCurrentModule('analytics')}
          style={{ 
            padding: '10px 20px', 
            backgroundColor: currentModule === 'analytics' ? '#007bff' : '#f8f9fa', 
            color: currentModule === 'analytics' ? 'white' : 'black'
          }}
        >
          üìä Th·ªëng k√™
        </button>
      </div>

      {/* Content */}
      {currentModule === 'semesters' && renderSemesterManagement()}
      {currentModule === 'subjects' && renderSubjectManagement()}
      {currentModule === 'grades' && renderGradeManagement()}
      {currentModule === 'documents' && renderDocumentManagement()} {/* <--- TH√äM D√íNG N√ÄY */}
      {currentModule === 'analytics' && renderAnalyticsDashboard()}
    </div>
  );
};

export default Dashboard; 